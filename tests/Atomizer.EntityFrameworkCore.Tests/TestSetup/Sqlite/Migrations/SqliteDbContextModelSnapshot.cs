// <auto-generated />
using System;
using Atomizer.EntityFrameworkCore.Tests.TestSetup.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atomizer.EntityFrameworkCore.Tests.TestSetup.Sqlite.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Atomizer.EntityFrameworkCore.Entities.AtomizerJobEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompletedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("FailedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdempotencyKey")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaseToken")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadType")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("QueueKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("RetryIntervals")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT");

                    b.Property<string>("ScheduleJobKey")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<long>("ScheduledAt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("VisibleAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AtomizerJobs", (string)null);
                });

            modelBuilder.Entity("Atomizer.EntityFrameworkCore.Entities.AtomizerJobErrorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Attempt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("JobId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuntimeIdentity")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("StackTrace")
                        .HasMaxLength(5120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("AtomizerJobErrors", (string)null);
                });

            modelBuilder.Entity("Atomizer.EntityFrameworkCore.Entities.AtomizerScheduleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<long?>("LastEnqueueAt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxCatchUp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MisfirePolicy")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NextRunAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadType")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("QueueKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("RetryIntervals")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AtomizerSchedules", (string)null);
                });

            modelBuilder.Entity("Atomizer.EntityFrameworkCore.Entities.AtomizerJobErrorEntity", b =>
                {
                    b.HasOne("Atomizer.EntityFrameworkCore.Entities.AtomizerJobEntity", "Job")
                        .WithMany("Errors")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Atomizer.EntityFrameworkCore.Entities.AtomizerJobEntity", b =>
                {
                    b.Navigation("Errors");
                });
#pragma warning restore 612, 618
        }
    }
}
